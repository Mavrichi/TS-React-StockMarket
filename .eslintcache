[{"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\ChartLogic.tsx":"1","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\index.tsx":"2","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\Charting.tsx":"3","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\App.tsx":"4"},{"size":3387,"mtime":1606877279014,"results":"5","hashOfConfig":"6"},{"size":432,"mtime":1606229703327,"results":"7","hashOfConfig":"6"},{"size":6138,"mtime":1606872670958,"results":"8","hashOfConfig":"6"},{"size":401,"mtime":1606876104146,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"zbebjy",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\ChartLogic.tsx",["19","20","21"],"import * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Tooltip } from \"chart.js\";\r\n\r\n/* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\ninterface stocktype {\r\n   c: string; // close price\r\n   o: string; // open price\r\n   h: string; // high price\r\n   l: string; // low price\r\n   v: string; // volume\r\n   t: string; // timestamp\r\n}\r\ninterface Props {\r\n   StockData: stocktype[] | undefined;\r\n   averageLine: boolean;\r\n}\r\nconst StockChart: React.FC<Props> = ({ StockData, averageLine }) => {\r\n   useEffect(() => {\r\n      console.log(\"stockdata Este:\", StockData);\r\n      let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n      chart.paddingRight = 20;\r\n\r\n      chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd-H-mm\";\r\n\r\n      let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n      dateAxis.renderer.grid.template.location = 0;\r\n\r\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      if (valueAxis.tooltip !== undefined) {\r\n         valueAxis.tooltip.disabled = true;\r\n      }\r\n\r\n      let series = chart.series.push(new am4charts.CandlestickSeries());\r\n      series.dataFields.dateX = \"date\";\r\n      series.dataFields.valueY = \"close\";\r\n      series.dataFields.openValueY = \"open\";\r\n      series.dataFields.lowValueY = \"low\";\r\n      series.dataFields.highValueY = \"high\";\r\n      //series.dataFields.customValue = \"avg\";\r\n      //series.dataFields.volumeValueX = \"Volume\";\r\n      series.simplifiedProcessing = true;\r\n      series.tooltipText =\r\n         \"Open:${openValueY.value}\\nLow:${lowValueY.value}\\nHigh:${highValueY.value}\\nClose:${valueY.value}\";\r\n      //Custom average line\r\n      if (averageLine) {\r\n         let series2 = chart.series.push(new am4charts.LineSeries());\r\n         series2.dataFields.dateX = \"date\";\r\n         series2.dataFields.valueY = \"average\";\r\n         series2.tooltipText = \"Average:${valueY}\";\r\n         // series2.tooltip.getFillFromObject = false;\r\n         // series2.tooltip.background.fill = am4core.color(\"#67b7dc\");\r\n         series2.strokeOpacity = 1;\r\n         series2.stroke = am4core.color(\"#e88029\");\r\n      }\r\n\r\n      chart.cursor = new am4charts.XYCursor();\r\n\r\n      // a separate series for scrollbar\r\n      let lineSeries = chart.series.push(new am4charts.LineSeries());\r\n      lineSeries.dataFields.dateX = \"date\";\r\n      lineSeries.dataFields.valueY = \"close\";\r\n      //lineSeries.dataFields.customValue = \"avg\";\r\n      // need to set on default state, as initially series is \"show\"\r\n      lineSeries.defaultState.properties.visible = false;\r\n\r\n      // hide from legend too (in case there is one)\r\n      lineSeries.hiddenInLegend = true;\r\n      lineSeries.fillOpacity = 0.5;\r\n      lineSeries.strokeOpacity = 0.5;\r\n\r\n      let scrollbarX = new am4charts.XYChartScrollbar();\r\n      scrollbarX.series.push(lineSeries);\r\n      chart.scrollbarX = scrollbarX;\r\n      if (StockData !== undefined) {\r\n         chart.data = StockData;\r\n      }\r\n      //chart.current = chart;\r\n\r\n      return () => {\r\n         chart.dispose();\r\n      };\r\n   }, [StockData, averageLine]);\r\n\r\n   return <div id=\"chartdiv\" style={{ width: \"100%\", height: \"95%\" }}></div>;\r\n};\r\nexport default StockChart;\r\n","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\index.tsx",[],"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\Charting.tsx",[],"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\App.tsx",[],{"ruleId":"22","severity":1,"message":"23","line":5,"column":10,"nodeType":"24","messageId":"25","endLine":5,"endColumn":17},{"ruleId":"26","severity":1,"message":"27","line":49,"column":10,"nodeType":"28","messageId":"29","endLine":49,"endColumn":109},{"ruleId":"26","severity":1,"message":"27","line":55,"column":32,"nodeType":"28","messageId":"29","endLine":55,"endColumn":51},"@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression"]