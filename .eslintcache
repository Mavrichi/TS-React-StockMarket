[{"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\MainComponent.tsx":"1","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\Charting.tsx":"2","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\ChartLogic.tsx":"3","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\App.tsx":"4","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\index.tsx":"5"},{"size":2446,"mtime":1606851858314,"results":"6","hashOfConfig":"7"},{"size":5348,"mtime":1606852061251,"results":"8","hashOfConfig":"7"},{"size":2696,"mtime":1606829436537,"results":"9","hashOfConfig":"7"},{"size":352,"mtime":1606852127797,"results":"10","hashOfConfig":"7"},{"size":432,"mtime":1606229703327,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zbebjy",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\MainComponent.tsx",[],"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\Charting.tsx",[],"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\components\\ChartLogic.tsx",["23","24","25"],"import * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { ReactComponentElement } from \"react\";\r\nimport React, { useEffect } from \"react\";\r\n\r\n/* Chart code */\r\n// Themes begin\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\ninterface stocktype {\r\n   c: string; // close price\r\n   o: string; // open price\r\n   h: string; // high price\r\n   l: string; // low price\r\n   v: string; // volume\r\n   t: string; // timestamp\r\n}\r\ninterface Props {\r\n   StockData: stocktype[] | undefined;\r\n}\r\nconst StockChart: React.FC<Props> = ({ StockData }) => {\r\n   useEffect(() => {\r\n      let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n      chart.paddingRight = 20;\r\n\r\n      chart.dateFormatter.inputDateFormat = \"yyyy-MM-dd-hh-mm\";\r\n\r\n      let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n      dateAxis.renderer.grid.template.location = 0;\r\n\r\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      if (valueAxis.tooltip != undefined) {\r\n         valueAxis.tooltip.disabled = true;\r\n      }\r\n\r\n      let series = chart.series.push(new am4charts.CandlestickSeries());\r\n      series.dataFields.dateX = \"date\";\r\n      series.dataFields.valueY = \"close\";\r\n      series.dataFields.openValueY = \"open\";\r\n      series.dataFields.lowValueY = \"low\";\r\n      series.dataFields.highValueY = \"high\";\r\n      //series.dataFields.volumeValueY = \"Volume\";\r\n      series.simplifiedProcessing = true;\r\n      series.tooltipText =\r\n         \"Open:${openValueY.value}\\nLow:${lowValueY.value}\\nHigh:${highValueY.value}\\nClose:${valueY.value}\";\r\n\r\n      chart.cursor = new am4charts.XYCursor();\r\n\r\n      // a separate series for scrollbar\r\n      let lineSeries = chart.series.push(new am4charts.LineSeries());\r\n      lineSeries.dataFields.dateX = \"date\";\r\n      lineSeries.dataFields.valueY = \"close\";\r\n      // need to set on default state, as initially series is \"show\"\r\n      lineSeries.defaultState.properties.visible = false;\r\n\r\n      // hide from legend too (in case there is one)\r\n      lineSeries.hiddenInLegend = true;\r\n      lineSeries.fillOpacity = 0.5;\r\n      lineSeries.strokeOpacity = 0.5;\r\n\r\n      let scrollbarX = new am4charts.XYChartScrollbar();\r\n      scrollbarX.series.push(lineSeries);\r\n      chart.scrollbarX = scrollbarX;\r\n      if (StockData !== undefined) {\r\n         chart.data = StockData;\r\n      }\r\n      //chart.current = chart;\r\n\r\n      return () => {\r\n         chart.dispose();\r\n      };\r\n   }, [StockData]);\r\n\r\n   return <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100%\" }}></div>;\r\n};\r\nexport default StockChart;\r\n","C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\App.tsx",[],"C:\\Users\\Marian\\Desktop\\onGoingWork\\React ts stock market\\my-app\\src\\index.tsx",[],{"ruleId":"26","severity":1,"message":"27","line":4,"column":10,"nodeType":"28","messageId":"29","endLine":4,"endColumn":31},{"ruleId":"30","severity":1,"message":"31","line":33,"column":29,"nodeType":"32","messageId":"33","endLine":33,"endColumn":31},{"ruleId":"34","severity":1,"message":"35","line":46,"column":10,"nodeType":"36","messageId":"37","endLine":46,"endColumn":109},"@typescript-eslint/no-unused-vars","'ReactComponentElement' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression"]